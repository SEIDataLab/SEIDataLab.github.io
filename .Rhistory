theme_minimal() +
theme(legend.position="bottom", legend.title = element_text(colour="Black", size=12, face="bold"),
legend.background = element_rect(fill="ghostwhite", size=0.5, linetype="blank"),
legend.text = element_text(size=10, face="bold"),
plot.title = element_text(colour = "black", size = 17, hjust=0.5, face="bold")) +
scale_fill_manual(values = c("#1b6db5","#b51b8f","#32CD32")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank())
ggplot(Q6,aes(x="", y=total, fill=Q006)) +
geom_bar(width=1, stat = "identity") +
coord_polar("y", start=0) +
# geom_text(aes(y=yposicao_legenda, label = sprintf("%1.2f%%",total)), size = 4,
#           color = 'black',fontface='bold') +
labs(x="",y="", fill="Sexo: ") +
theme_minimal() +
theme(legend.position="bottom", legend.title = element_text(colour="Black", size=12, face="bold"),
legend.background = element_rect(fill="ghostwhite", size=0.5, linetype="blank"),
legend.text = element_text(size=10, face="bold"),
plot.title = element_text(colour = "black", size = 17, hjust=0.5, face="bold")) +
scale_fill_manual(values = c("#1b6db5","#b51b8f","#32CD32")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank())
ggplot(Q6,aes(x="", y=total, fill=Q006)) +
geom_bar(width=1, stat = "identity", color = "white") +
coord_polar("y", start=0) +
# geom_text(aes(y=yposicao_legenda, label = sprintf("%1.2f%%",total)), size = 4,
#           color = 'black',fontface='bold') +
labs(x="",y="", fill="Sexo: ") +
theme_minimal() +
theme(legend.position="bottom", legend.title = element_text(colour="Black", size=12, face="bold"),
legend.background = element_rect(fill="ghostwhite", size=0.5, linetype="blank"),
legend.text = element_text(size=10, face="bold"),
plot.title = element_text(colour = "black", size = 17, hjust=0.5, face="bold")) +
scale_fill_manual(values = c("#1b6db5","#b51b8f","#32CD32")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank())
ggplot(Q6,aes(x="", y=total, fill=Q006)) +
geom_bar(width=1, stat = "identity", color = "white") +
coord_polar("y", start=0) +
# geom_text(aes(y=yposicao_legenda, label = sprintf("%1.2f%%",total)), size = 4,
#           color = 'black',fontface='bold') +
labs(x="",y="", fill="Sexo: ") +
theme_minimal() +
theme(legend.position="bottom", legend.title = element_text(colour="Black", size=12, face="bold"),
legend.background = element_rect(fill="ghostwhite", size=0.5, linetype="blank"),
legend.text = element_text(size=10, face="bold"),
plot.title = element_text(colour = "black", size = 17, hjust=0.5, face="bold")) +
scale_fill_manual(values = c("#1b6db5","#b51b8f","#32CD32", "#374045")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank())
ggplot(Q6,aes(x="", y=total, fill=Q006)) +
geom_bar(width=1, stat = "identity", color = "white") +
coord_polar("y", start=0) +
# geom_text(aes(y=yposicao_legenda, label = sprintf("%1.2f%%",total)), size = 4,
#           color = 'black',fontface='bold') +
labs(x="",y="", fill="Sexo: ") +
theme_minimal() +
theme(legend.position="bottom", legend.title = element_text(colour="Black", size=12, face="bold"),
legend.text = element_text(size=10, face="bold"),
plot.title = element_text(colour = "black", size = 17, hjust=0.5, face="bold")) +
scale_fill_manual(values = c("#1b6db5","#b51b8f","#32CD32", "#374045")) +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank())
View(Q6_1)
ggplot(Q6_1, aes(x=Q0061, y=total)) +
geom_bar(stat="identity", fill="#40739e") +
geom_text(aes(label=sprintf("%1.2f%%",total)),size = 4.2, position =position_dodge(width=0.9),
vjust=-0.25, color = 'black',fontface='bold') +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=8),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "bottom", legend.background = element_rect(fill="ghostwhite", size=0.7, linetype="blank")) +
labs(y="Percentual", x="Renda mensal") +
guides(fill=FALSE)   +
scale_y_discrete(limits=factor(0:100), breaks = c(0,10,20,30,40,50,60,70,80,90,100), name = "Percentual (%)") +
scale_x_discrete(labels = Q0061)
legenda_renda <- c("Não tem renda",
"Menos de R$ 1.045",
"R$ 1.046 até\n R$ 3.135",
"R$ 3.136 até\n R$ 6.270",
"R$ 6.271 até\n R$ 9.405",
"R$ 9.406 até\n R$ 15.675",
"Mais que\n R$ 15.676")
ggplot(Q6_1, aes(x=Q0061, y=total)) +
geom_bar(stat="identity", fill="#40739e") +
geom_text(aes(label=sprintf("%1.2f%%",total)),size = 4.2, position =position_dodge(width=0.9),
vjust=-0.25, color = 'black',fontface='bold') +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=8),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "bottom", legend.background = element_rect(fill="ghostwhite", size=0.7, linetype="blank")) +
labs(y="Percentual", x="Renda mensal") +
guides(fill=FALSE)   +
scale_y_discrete(limits=factor(0:100), breaks = c(0,10,20,30,40,50,60,70,80,90,100), name = "Percentual (%)") +
scale_x_discrete(labels = legenda_renda)
ggplot(Q6_1, aes(x=Q0061, y=total)) +
geom_bar(stat="identity", fill="#40739e") +
# geom_text(aes(label=sprintf("%1.2f%%",total)),size = 4.2, position =position_dodge(width=0.9),
#           vjust=-0.25, color = 'black',fontface='bold') +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=8),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "bottom", legend.background = element_rect(fill="ghostwhite", size=0.7, linetype="blank")) +
labs(y="Percentual", x="Renda mensal") +
guides(fill=FALSE)   +
scale_y_discrete(limits=factor(0:100), breaks = c(0,10,20,30,40,50,60,70,80,90,100), name = "Percentual (%)") +
scale_x_discrete(labels = legenda_renda)
ggplot(Q6_1, aes(x=Q0061, y=total)) +
geom_bar(stat="identity", fill="#40739e") +
# geom_text(aes(label=sprintf("%1.2f%%",total)),size = 4.2, position =position_dodge(width=0.9),
#           vjust=-0.25, color = 'black',fontface='bold') +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=8),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "bottom", legend.background = element_rect(fill="ghostwhite", size=0.7, linetype="blank")) +
labs(y="Percentual", x="Renda mensal") +
guides(fill=FALSE)   +
#scale_y_discrete(limits=factor(0:100), breaks = c(0,10,20,30,40,50,60,70,80,90,100), name = "Percentual (%)") +
scale_x_discrete(labels = legenda_renda)
ggplot(Q6_1, aes(x=Q0061, y=total)) +
geom_bar(stat="identity", fill="#40739e") +
# geom_text(aes(label=sprintf("%1.2f%%",total)),size = 4.2, position =position_dodge(width=0.9),
#           vjust=-0.25, color = 'black',fontface='bold') +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=8),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "bottom", legend.background = element_rect(fill="ghostwhite", size=0.7, linetype="blank")) +
labs(y="Pessoas", x="Renda mensal") +
guides(fill=FALSE)   +
#scale_y_discrete(limits=factor(0:100), breaks = c(0,10,20,30,40,50,60,70,80,90,100), name = "Percentual (%)") +
scale_x_discrete(labels = legenda_renda)
ggplot(Q1, aes(y = total, x = Q001))) +
geom_bar(position = "dodge", stat = "identity", fill = "#CD0000") +
# geom_text(aes(label=sprintf("%1.1f%%",percent)), size = 3, position =position_dodge(width=0.9),
#           hjust=-0.5, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "none")
ggplot(Q1, aes(y = total, x = Q001)) +
geom_bar(position = "dodge", stat = "identity", fill = "#CD0000") +
# geom_text(aes(label=sprintf("%1.1f%%",percent)), size = 3, position =position_dodge(width=0.9),
#           hjust=-0.5, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position = "none")
ggplot(Q1, aes(x=Q001, y=total)) +
geom_bar(position = "stack", stat = "identity",aes(fill=Q001)) +
# geom_text(data =data_agen_avalia, aes(label=sprintf("%1.1f%%",satisf_percent_ava),y=satisf_percent_ava),
#           size = 3, position =position_dodge(width=1),
#           hjust=-0.1, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position ="none") +
# scale_y_discrete(limits=factor(0:100), breaks = c(0,20,40,60,80,100),
#                  name = "Percentual (%)") +
scale_fill_manual(values = cols)
ggplot(Q1, aes(x=Q001, y=total)) +
geom_bar(position = "stack", stat = "identity",aes(fill=Q001)) +
# geom_text(data =data_agen_avalia, aes(label=sprintf("%1.1f%%",satisf_percent_ava),y=satisf_percent_ava),
#           size = 3, position =position_dodge(width=1),
#           hjust=-0.1, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position ="none")
View(Q1_1)
ggplot(Q1_1, aes(x=Q001, y=count)) +
geom_bar(position = "stack", stat = "identity",aes(fill=Q001)) +
# geom_text(data =data_agen_avalia, aes(label=sprintf("%1.1f%%",satisf_percent_ava),y=satisf_percent_ava),
#           size = 3, position =position_dodge(width=1),
#           hjust=-0.1, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position ="none")
ggplot(Q1_1, aes(x=Q0011, y=count)) +
geom_bar(position = "stack", stat = "identity",aes(fill=Q001)) +
# geom_text(data =data_agen_avalia, aes(label=sprintf("%1.1f%%",satisf_percent_ava),y=satisf_percent_ava),
#           size = 3, position =position_dodge(width=1),
#           hjust=-0.1, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position ="none")
View(Q1_1)
ggplot(Q1_1, aes(x=rowname, y=count)) +
geom_bar(position = "stack", stat = "identity",aes(fill=Q001)) +
# geom_text(data =data_agen_avalia, aes(label=sprintf("%1.1f%%",satisf_percent_ava),y=satisf_percent_ava),
#           size = 3, position =position_dodge(width=1),
#           hjust=-0.1, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position ="none")
ggplot(Q1_1, aes(x=rowname, y=count)) +
geom_bar(position = "stack", stat = "identity",aes(fill=rowname)) +
# geom_text(data =data_agen_avalia, aes(label=sprintf("%1.1f%%",satisf_percent_ava),y=satisf_percent_ava),
#           size = 3, position =position_dodge(width=1),
#           hjust=-0.1, color = 'black',fontface='bold') +
theme_classic() +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(face="bold", color="#000000",
size=10),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
axis.text=element_text(size=6, face="bold"),
axis.text.x = element_text(face="bold", color="#000000", size=10),
plot.title = element_text(colour = "black", size = 17, hjust=0.5),
legend.position ="none")
distill::create_post("teste", author = "Rodrigo Cerqueira")
#setwd("C:\\Users\\livia\\Documents\\Lívia\\SEI\\SECTI\\2017\\DADOS")
setwd("C:\\Users\\Rodrigo\\OneDrive\\DIPEQ\\InfoVis\\ObservatorioCTI\\observatorio_cti\\dados\\educacao\\educacao_superior")
curso2013 <- read.csv2("DM_CURSO13.CSV", sep = "|")
curso2013 <- read.csv2("DM_CURSO13_BA.CSV", sep = "|")
curso2014 <- read.csv2("DM_CURSO14_BA.CSV", sep = "|")
curso2015 <- read.csv2("DM_CURSO15_BA.CSV", sep = "|")
curso2016 <- read.csv2("DM_CURSO16_BA.CSV", sep = "|")
curso2017 <- read.csv2("DM_CURSO17_BA.CSV", sep = "|")
curso2018 <- read.csv2("DM_CURSO18_BA.CSV", sep = "|")
curso2019 <- read.csv2("DM_CURSO19_BA.CSV", sep = "|")
curso2013 <- curso2013 %>% filter(CO_UF_CURSO == 29)
curso2014 <- curso2014 %>% filter(CO_UF_CURSO == 29)
curso2015 <- curso2015 %>% filter(CO_UF_CURSO == 29)
curso2016 <- curso2016 %>% filter(CO_UF_CURSO == 29)
curso2017 <- curso2017 %>% filter(CO_UF == 29)
curso2018 <- curso2018 %>% filter(CO_UF == 29)
curso2019 <- curso2019 %>% filter(CO_UF == 29)
curso2013 <- curso2013 %>% select(NO_CURSO, QT_MATRICULA_CURSO, QT_CONCLUINTE_CURSO, QT_INGRESSO_CURSO, CO_IES) %>% mutate(ano=2013)
ies2013 <- read.csv2("DM_IES13.CSV")
curso2013 <- read.csv2("DM_CURSO13_BA.CSV")
curso2014 <- read.csv2("DM_CURSO14_BA.CSV")
curso2015 <- read.csv2("DM_CURSO15_BA.CSV")
curso2016 <- read.csv2("DM_CURSO16_BA.CSV")
curso2017 <- read.csv2("DM_CURSO17_BA.CSV")
curso2018 <- read.csv2("DM_CURSO18_BA.CSV")
curso2019 <- read.csv2("DM_CURSO19_BA.CSV")
curso2013 <- curso2013 %>% filter(CO_UF_CURSO == 29)
curso2014 <- curso2014 %>% filter(CO_UF_CURSO == 29)
curso2015 <- curso2015 %>% filter(CO_UF_CURSO == 29)
curso2016 <- curso2016 %>% filter(CO_UF_CURSO == 29)
curso2017 <- curso2017 %>% filter(CO_UF == 29)
curso2018 <- curso2018 %>% filter(CO_UF == 29)
curso2019 <- curso2019 %>% filter(CO_UF == 29)
curso2013 <- curso2013 %>% select(NO_CURSO, QT_MATRICULA_CURSO, QT_CONCLUINTE_CURSO, QT_INGRESSO_CURSO, CO_IES) %>% mutate(ano=2013)
curso2014 <- curso2014 %>% select(NO_CURSO, QT_MATRICULA_CURSO, QT_CONCLUINTE_CURSO, QT_INGRESSO_CURSO, CO_IES) %>% mutate(ano=2014)
curso2015 <- curso2015 %>% select(NO_CURSO, QT_MATRICULA_CURSO, QT_CONCLUINTE_CURSO, QT_INGRESSO_CURSO, CO_IES) %>% mutate(ano=2015)
curso2016 <- curso2016 %>% select(NO_CURSO, QT_MATRICULA_CURSO, QT_CONCLUINTE_CURSO, QT_INGRESSO_CURSO, CO_IES) %>% mutate(ano=2016)
curso2017 <- curso2017 %>% select(NO_CURSO, QT_MATRICULA_TOTAL, QT_CONCLUINTE_TOTAL, QT_INGRESSO_TOTAL, CO_IES) %>% mutate(ano=2017)
curso2018 <- curso2019 %>% select(NO_CURSO, QT_MATRICULA_TOTAL, QT_CONCLUINTE_TOTAL, QT_INGRESSO_TOTAL, CO_IES) %>% mutate(ano=2018)
curso2019 <- curso2019 %>% select(NO_CURSO, QT_MATRICULA_TOTAL, QT_CONCLUINTE_TOTAL, QT_INGRESSO_TOTAL, CO_IES) %>% mutate(ano=2019)
curso2017 <- curso2017 %>% rename(QT_MATRICULA_CURSO = "QT_MATRICULA_TOTAL")
curso2018 <- curso2018 %>% rename(QT_MATRICULA_CURSO = "QT_MATRICULA_TOTAL")
curso2019 <- curso2019 %>% rename(QT_MATRICULA_CURSO = "QT_MATRICULA_TOTAL")
curso2017 <- curso2017 %>% rename(QT_CONCLUINTE_CURSO = "QT_CONCLUINTE_TOTAL")
curso2018 <- curso2018 %>% rename(QT_CONCLUINTE_CURSO = "QT_CONCLUINTE_TOTAL")
curso2019 <- curso2019 %>% rename(QT_CONCLUINTE_CURSO = "QT_CONCLUINTE_TOTAL")
curso2017 <- curso2017 %>% rename(QT_INGRESSO_CURSO = "QT_INGRESSO_TOTAL")
curso2018 <- curso2018 %>% rename(QT_INGRESSO_CURSO = "QT_INGRESSO_TOTAL")
curso2019 <- curso2019 %>% rename(QT_INGRESSO_CURSO = "QT_INGRESSO_TOTAL")
cursototal <- rbind(curso2013,curso2014,curso2015,curso2016,curso2017,curso2018,curso2019)
cursototal <- cursototal %>% filter(!NO_CURSO %in% c("ABI - CIÊNCIAS BIOLÓGICAS", "ABI - CIÊNCIAS SOCIAIS","ABI - COMPOSIÇÃO E REGÊNCIA",
"ABI - DANÇA", "ABI - ENGENHARIA", "ABI - ENGENHARIA DE MINAS", "ABI - FILOSOFIA",
"ABI - FÍSICA", "ABI - GEOGRAFIA", "ABI - HISTÓRIA", "ABI - INSTRUMENTO", "ABI - INSTRUMENTO",
"ABI - LETRAS VERNÁCULAS E LÍNGUA ESTRANGEIRA MODERNA", "ABI - LICENCIATURAS INTERDISCIPLINARES",
"ABI - LÍNGUA ESTRANGEIRA","ABI - LÍNGUA ESTRANGEIRA", "ABI - MATEMÁTICA", "ABI - MÚSICA POPULAR",
"ABI - QUÍMICA", "ABI - LETRAS VERNÁCULAS","ABI - LÍNGUA ESTRANGEIRA MODERNA OU CLÁSSICA" ))
cursototal <- cursototal %>% mutate(
curso_outros = ifelse(NO_CURSO == "ADMINISTRAÇÃO" | NO_CURSO == "CIÊNCIAS CONTÁBEIS" | NO_CURSO == "DIREITO"  |
NO_CURSO == "ENFERMAGEM" | NO_CURSO == "ENGENHARIA CIVIL" | NO_CURSO == "FISIOTERAPIA"  |
NO_CURSO == "MEDICINA"  | NO_CURSO == "PEDAGOGIA" |
NO_CURSO == "PSICOLOGIA",NO_CURSO, "OUTROS" ))
cursototal <- cursototal %>% mutate(ano = ymd(ano, truncated = 2L))
library(tidyverse)
library(lubridate)
library(ggplot2)
library(data.table)
library(forcats)
cursototal <- cursototal %>% mutate(ano = ymd(ano, truncated = 2L))
cursototal2 <- cursototal %>%
group_by(curso_outros, ano) %>%
summarise(frequencia = sum(QT_MATRICULA_CURSO, na.rm = TRUE ))
ggplot(cursototal2, aes(x = ano, y = frequencia, fill = curso_outros)) +
geom_bar(stat="identity") +
labs(x="", y= "Quantidade de matrículas", fill = "Cursos:",
title = "Cursos com maior quantidade de matrícula na Bahia, 2013-2019.",
caption = "Fonte: INEP. Microdados do Censo da Educação Superior\nNota: Não incluem matrículas de cursos de Área Básica de Ingresso (ABI)"
) +
theme_minimal()+
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
cursoingconc <- cursototal %>%
group_by(curso_outros, ano) %>%
summarise(Ingressante = sum(QT_INGRESSO_CURSO, na.rm = TRUE), Concluite = sum(QT_CONCLUINTE_CURSO, na.rm = TRUE ))
cursoingconc <- cursoingconc %>% filter(ano == "2013-01-01")
cursoingconc <- cursoingconc %>% gather(SITUACAO, total, -c(curso_outros,ano))
ggplot(data=cursoingconc, aes(x = reorder(curso_outros,total),
y=total,
fill=SITUACAO)) +
geom_bar(stat="identity", position=position_dodge())+
labs(title = "Ingressantes e concluintes dos cursos com maior quantidade de matrícula na Bahia, 2013.",
caption = "Fonte: INEP. Microdados do Censo da Educação Superior\nNota: Não incluem matrículas de cursos de Área Básica de Ingresso (ABI)"
, x="", y="", fill = "Situação:")+
theme_minimal()+
coord_flip()+
scale_fill_manual(values=c('#000080','#87CEFA')) #+
ies2013 <- read.csv2("DM_IES13.CSV")
ies2014 <- read.csv2("DM_IES14.CSV")
ies2015 <- read.csv2("DM_IES15.CSV")
ies2016 <- read.csv2("DM_IES16.CSV")
ies2017 <- read.csv2("DM_IES17.CSV")
ies2018 <- read.csv2("DM_IES18.CSV")
ies2019 <- read.csv2("DM_IES19.CSV")
ies2013 <- ies2013 %>% filter(CO_UF_IES == 29)
ies2014 <- ies2014 %>% filter(CO_UF_IES == 29)
ies2015 <- ies2015 %>% filter(CO_UF_IES == 29)
ies2016 <- ies2016 %>% filter(CO_UF_IES == 29)
ies2017 <- ies2017 %>% filter(CO_UF == 29)
ies2018 <- ies2018 %>% filter(CO_UF == 29)
ies2019 <- ies2019 %>% filter(CO_UF == 29)
ies2013 <- ies2013 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2014 <- ies2014 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2015 <- ies2015 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2016 <- ies2016 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2013 <- ies2013 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2013)
ies2014 <- ies2014 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2014)
ies2015 <- ies2015 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2015)
ies2013 <- read.csv2("DM_IES13.CSV", sep = "|")
ies2013 <- read.csv2("DM_IES13.CSV", sep = "|")
ies2014 <- read.csv2("DM_IES14.CSV", sep = "|")
ies2015 <- read.csv2("DM_IES15.CSV", sep = "|")
ies2016 <- read.csv2("DM_IES16.CSV", sep = "|")
ies2017 <- read.csv2("DM_IES17.CSV", sep = "|")
ies2018 <- read.csv2("DM_IES18.CSV", sep = "|")
ies2019 <- read.csv2("DM_IES19.CSV", sep = "|")
ies2013 <- ies2013 %>% filter(CO_UF_IES == 29)
ies2014 <- ies2014 %>% filter(CO_UF_IES == 29)
ies2015 <- ies2015 %>% filter(CO_UF_IES == 29)
ies2016 <- ies2016 %>% filter(CO_UF_IES == 29)
ies2017 <- ies2017 %>% filter(CO_UF == 29)
ies2018 <- ies2018 %>% filter(CO_UF == 29)
ies2019 <- ies2019 %>% filter(CO_UF == 29)
ies2013 <- ies2013 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2014 <- ies2014 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2015 <- ies2015 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2016 <- ies2016 %>% rename(TP_CATEGORIA_ADMINISTRATIVA = "CO_CATEGORIA_ADMINISTRATIVA")
ies2013 <- ies2013 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2013)
ies2014 <- ies2014 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2014)
ies2015 <- ies2015 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2015)
ies2016 <- ies2016 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2016)
ies2017 <- ies2017 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2017)
ies2018 <- ies2019 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2018)
ies2019 <- ies2019 %>% select(TP_CATEGORIA_ADMINISTRATIVA, NO_IES, CO_IES) %>% mutate(ano=2019)
iestotal <- rbind(ies2013,ies2014,ies2015,ies2016,ies2017,ies2018,ies2019)
iestotal <- iestotal %>% mutate(TP_CATEGORIA_ADMINISTRATIVA = case_when(TP_CATEGORIA_ADMINISTRATIVA == 1 ~ "Pública Federal",
TP_CATEGORIA_ADMINISTRATIVA == 2 ~ "Pública Estudual",
TP_CATEGORIA_ADMINISTRATIVA == 4 ~ "Privada com fins lucrativos",
TP_CATEGORIA_ADMINISTRATIVA == 5 ~ "Privada sem fins lucrativos"))
iestotal2 <- iestotal %>%
group_by(TP_CATEGORIA_ADMINISTRATIVA, ano) %>%
summarise( Total = n())
iestotal2 <- iestotal2 %>% mutate(ano = ymd(ano, truncated = 2L))
ggplot(data = iestotal2, aes(x = ano,
y=Total,
colour=TP_CATEGORIA_ADMINISTRATIVA)) +
geom_line(size = 0.8)+
geom_text(aes(label = Total),size = 3, position =position_dodge(width=0.9),
vjust=-0.25, color = 'black',fontface='bold')+
labs(title = "Quantidade de instituições do Ensino Superior por dependência admisnistrativa na Bahia, 2013-2019.",
caption = "Fonte: INEP. Microdados do Censo da Educação Superior", x="", y="Quantidade de IES", colour = "Categoria Administrativa:")+
theme_minimal()+
scale_colour_manual(values = c("#154360", "#7D3C98", "#922B21", "#F1C40F" ))+
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
ggplot(data = iestotal2, aes(x = ano, y = Total, fill = TP_CATEGORIA_ADMINISTRATIVA)) +
geom_bar(stat="identity") +
labs(x="", y= "Quantidade de IES", fill = "Categoria Administrativas",
title = "Quantidade de instituições do Ensino Superior por dependência admisnistrativa na Bahia, 2013-2019.",
caption = "Fonte: INEP. Microdados do Censo da Educação Superior") +
theme_minimal()+
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
iestotal3 <- iestotal %>% select(TP_CATEGORIA_ADMINISTRATIVA, CO_IES, NO_IES)
cursoies <- inner_join(cursototal, iestotal3, by = c("CO_IES"))
cursoies <- cursoies %>% mutate(ano = ymd(ano, truncated = 2L))
cursoies2 <- cursoies %>%
group_by(TP_CATEGORIA_ADMINISTRATIVA, ano) %>%
summarise( Ingressante = sum(QT_INGRESSO_CURSO, na.rm = TRUE))
ggplot(data = cursoies2, aes(x = ano, y = Ingressante, fill = TP_CATEGORIA_ADMINISTRATIVA)) +
geom_bar(stat="identity") + scale_fill_manual(values = c("#8B4513","#A0522D","#D2691E", "#F4A460"))+
labs(x="", y= "Quantidade de ingressantes", fill = "Categoria Administrativa:",
title = "Quantidade de ingressantes nas Instituições do Ensino Superior por dependência admisnistrativa na Bahia, 2013-2019.",
caption = "Fonte: INEP. Microdados do Censo da Educação Superior\nNota: Não incluem matrículas de cursos de Área Básica de Ingresso (ABI)") +
theme_minimal()+
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
cursoies3 <- cursoies %>%
group_by(TP_CATEGORIA_ADMINISTRATIVA, ano) %>%
summarise( Concluinte = sum(QT_CONCLUINTE_CURSO, na.rm = TRUE))
ggplot(data = cursoies3, aes(x = ano, y = Concluinte , fill = TP_CATEGORIA_ADMINISTRATIVA)) +
geom_bar(stat="identity") + scale_fill_manual(values = c("#9ACD32","#808000","#6B8E23", "#006400"))+
labs(x="", y= "Quantidade de Concluinte", fill = "Categoria Administrativa:",
title = "Quantidade de ingressantes nas Instituições do Ensino Superior por dependência admisnistrativa na Bahia, 2013-2019.",
caption = "Fonte: INEP. Microdados do Censo da Educação Superior\nNota: Não incluem matrículas de cursos de Área Básica de Ingresso (ABI)") +
theme_classic()+
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
View(ies2013)
ies2019 <- read.csv2("DM_IES19.CSV", sep = "|")
View(ies2019)
ies2019 <- ies2019 %>% filter(CO_UF == 29)
file.create(".nojekyll")
getwd()
setwd("C:/Users/Rodrigo/OneDrive/DIPEQ/SEIDataLab/Blog_distill")
file.create(".nojekyll")
distill::create_article("ideBR")
distill::create_post("ideBR")
